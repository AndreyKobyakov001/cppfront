7. regression-tests/mixed-captures-in-expressions-and-postconditions.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
11. regression-tests/mixed-function-expression-and-std-for-each.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
12. regression-tests/mixed-function-expression-and-std-ranges-for-each-with-capture.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
13. regression-tests/mixed-function-expression-and-std-ranges-for-each.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
14. regression-tests/mixed-function-expression-with-pointer-capture.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
15. regression-tests/mixed-function-expression-with-repeated-capture.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error

ALL ABOVE HAS 2 SEMICOLONS. 

mixed-initialization-safety-1-error.cpp2(30,21): error: local variable x is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors
mixed-initialization-safety-2-error.cpp2(21,5): error: local variable x must be initialized on both branches or neither branch
mixed-initialization-safety-2-error.cpp2(23,5): error: "if" initializes x on:
  branch starting at line 23
but not on:
  branch starting at line 26
  ==> program violates initialization safety guarantee - see previous errors
25. regression-tests/mixed-lifetime-safety-and-null-contracts.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
mixed-lifetime-safety-pointer-init-1-error.cpp2(17,25): error: local variable p is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors
mixed-lifetime-safety-pointer-init-2-error.cpp2(7,5): error: local variable p must be initialized on both branches or neither branch
mixed-lifetime-safety-pointer-init-2-error.cpp2(10,5): error: "if" initializes p on:
  branch starting at line 13
but not on:
  branch starting at line 10
  ==> program violates initialization safety guarantee - see previous errors
37. regression-tests/mixed-type-safety-1.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
pure2-bounds-safety-pointer-arithmetic-error.cpp2(15,13): error: 'delete' and owning raw pointers are not supported in Cpp2 - use unique.new<T>, shared.new<T>, or gc.new<T> instead (in that order)
40. regression-tests/pure2-break-continue.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
pure2-cpp1-multitoken-fundamental-types-error.cpp2(3,8): error: 'signed short int' - did you mean 'short'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(3,8): error: 'signed short int' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, __schar, __uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(4,8): error: 'short int signed' - did you mean 'short'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(4,8): error: 'short int signed' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, __schar, __uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(5,8): error: 'long long unsigned int' - did you mean 'ulonglong'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(5,8): error: 'long long unsigned int' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, __schar, __uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(6,8): error: 'long double' - did you mean 'long'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(6,8): error: 'long double' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, __schar, __uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(7,8): error: 'unsigned char' - did you mean 'u8' (usually best) or '__uchar'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(7,8): error: 'unsigned char' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, __schar, __uchar
    - see also cpp2util.h > "Convenience names for integer types"
43. regression-tests/pure2-deducing-pointers-error.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
44. regression-tests/pure2-defaulted-comparisons-and-final-types.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
45. regression-tests/pure2-forward-return-diagnostics-error.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
46. regression-tests/pure2-forward-return.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
pure2-lifetime-safety-pointer-init-1-error.cpp2(14,25): error: local variable p is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors
pure2-lifetime-safety-reject-null-error.cpp2(10,15): error: pointer cannot be initialized to null or int - leave it uninitialized and then set it to a non-null value when you have one (at 'nullptr')
pure2-lifetime-safety-reject-null-error.cpp2: error: null initialization detected
  ==> program violates lifetime safety guarantee - see previous errors
59. regression-tests/pure2-more-wildcards.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
62. regression-tests/pure2-requires-clauses.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
pure2-return-tuple-no-identifier-error.cpp2(1,11): error: expected identifier, not 'int'
pure2-return-tuple-no-identifier-error.cpp2(1,16): error: expected identifier, not 'int'
  ==> program violates lifetime safety guarantee - see previous errors
pure2-return-tuple-no-type-error.cpp2(1,11): error: return parameter 'a' must have a type
pure2-return-tuple-no-type-error.cpp2(1,14): error: return parameter 'b' must have a type
  ==> program violates lifetime safety guarantee - see previous errors
67. regression-tests/pure2-template-parameter-lists.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
pure2-type-and-namespace-aliases.cpp2(33,67): error: ';' expected at end of alias declaration
  ==> program violates lifetime safety guarantee - see previous errors
68. regression-tests/pure2-type-safety-1.cpp2 Different
source/fuzzing/round_trip_test.cpp:112: Failure
Value of: same
  Actual: false
Expected: true
70. regression-tests/pure2-types-basics.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
71. regression-tests/pure2-types-inheritance.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
72. regression-tests/pure2-types-order-independence-and-nesting.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
73. regression-tests/pure2-types-ordering-via-meta-functions.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed
Parse error
80. regression-tests/pure2-types-value-types-via-meta-functions.cpp2
source/fuzzing/round_trip_test.cpp:118: Failure
Failed